name: Build with Turbopack
env:
  TOTAL_RUNNERS: 1
  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
  NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
  NEXT_PUBLIC_URL_ALT: ${{ secrets.NEXT_PUBLIC_URL_ALT }}
  NEXT_PUBLIC_API_TOKEN: ${{ secrets.NEXT_PUBLIC_API_TOKEN }}
  MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
  MAILGUN_API_URL: ${{ secrets.MAILGUN_API_URL }}
  MAILGUN_PUBLIC_KEY: ${{ secrets.MAILGUN_PUBLIC_KEY }}
  MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}

on:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Cache Next.js build
        id: cache-nextjs
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            .turbo
          key: ${{ runner.os }}-nextjs-${{ hashFiles('src/**','public/**','next*','package*','pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Build with Turbopack
        if: steps.cache-nextjs.outputs.cache-hit != 'true'
        run: |
          echo "ðŸš€ Building with Turbopack..."
          pnpm build
        env:
          TURBOPACK: 1
          NEXT_TELEMETRY_DISABLED: 1
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
          NEXT_PUBLIC_URL_ALT: ${{ secrets.NEXT_PUBLIC_URL_ALT }}

      - name: Lint code
        run: pnpm lint

      - name: Type check
        run: pnpm tsc

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ secrets.APP_IMAGE }}
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}
            NEXT_PUBLIC_URL_ALT=${{ secrets.NEXT_PUBLIC_URL_ALT }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
