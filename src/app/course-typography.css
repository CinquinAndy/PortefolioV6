@reference "../styles/main.css";

@layer components {
	/* Override global serif font for learning section - use sans-serif */
	/* Force Be Vietnam Pro for all learning section elements */
	.learning-section *,
	.learning-section .prose,
	.learning-section .prose *,
	.learning-section aside,
	.learning-section aside *,
	.learning-section nav,
	.learning-section nav *,
	.learning-section h1,
	.learning-section h2,
	.learning-section h3,
	.learning-section h4,
	.learning-section h5,
	.learning-section h6 {
		font-family: var(--font-be-vietnam-pro), sans-serif !important;
	}

	.prose {
		@apply text-base/7 text-slate-300;
		color: rgb(203 213 225); /* Force slate-300 */
	}

	.prose :where(h1, h2, h3, h4, h5, h6):not(:where([class~="not-prose"] *)) {
		@apply scroll-mt-24 font-medium tracking-tight text-slate-50;
		color: rgb(248 250 252) !important; /* Force slate-50 */
	}

	.prose :where(h1):not(:where([class~="not-prose"] *)) {
		@apply mt-16 text-3xl/9;
	}

	.prose :where(h2):not(:where([class~="not-prose"] *)) {
		@apply mt-12 text-2xl/8;
	}

	.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
		@apply mt-4;
	}

	.prose :where(h3):not(:where([class~="not-prose"] *)) {
		@apply mt-8 text-lg/7;
	}

	.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
		@apply mt-4;
	}

	.prose :where(h4):not(:where([class~="not-prose"] *)) {
		@apply mt-6 text-base/7;
	}

	.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
		@apply mt-3;
	}

	.prose :where(hr):not(:where([class~="not-prose"] *)) {
		@apply my-12;
		border: none;
		height: 2px;
		background: linear-gradient(to right, transparent, rgba(99, 102, 241, 0.5), transparent);
	}

	.prose :where(p, li):not(:where([class~="not-prose"] *)) {
		@apply text-base/7;
	}

	.prose :where(h2, h3, h4, hr, p + p, p + ul, p + ol, ul + p, ol + p):not(:where([class~="not-prose"] *)) {
		@apply mt-6;
	}

	.prose :where(ul, ol):not(:where([class~="not-prose"] *)) {
		@apply list-outside;
	}

	.prose :where(ul):not(:where([class~="not-prose"] *)) {
		@apply list-disc pl-6;
	}

	.prose :where(ol):not(:where([class~="not-prose"] *)) {
		@apply list-decimal pl-6;
	}

	.prose :where(li):not(:where([class~="not-prose"] *)) {
		@apply pl-2;
	}

	.prose :where(ol > li, ul > li):not(:where([class~="not-prose"] *)) {
		@apply mt-2;
	}

	.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
		@apply mt-3;
	}

	.prose :where(a):not(:where([class~="not-prose"] *)) {
		@apply font-semibold text-indigo-400 underline decoration-indigo-400/40 underline-offset-2 hover:decoration-indigo-400 hover:text-indigo-300;
		color: rgb(129 140 248) !important; /* Force indigo-400 */
		text-decoration-color: rgba(129, 140, 248, 0.4);
	}

	.prose :where(a):not(:where([class~="not-prose"] *)):hover {
		color: rgb(165 180 252) !important; /* Force indigo-300 */
		text-decoration-color: rgb(129 140 248);
	}

	.prose :where(strong):not(:where([class~="not-prose"] *)) {
		@apply font-semibold text-slate-50;
		color: rgb(248 250 252) !important; /* Force slate-50 */
	}

	.prose :where(code):not(:where([class~="not-prose"] *)) {
		@apply rounded border border-white/20 bg-white/5 px-1 py-0.5 text-sm/6 font-medium text-indigo-300;
		color: rgb(165 180 252) !important; /* Force indigo-300 */
		background-color: rgba(255, 255, 255, 0.05);
		border-color: rgba(255, 255, 255, 0.2);
	}

	.prose :where(pre):not(:where([class~="not-prose"] *)) {
		@apply -mx-4 mt-8 overflow-x-auto px-4 py-5 text-xs/6 text-slate-50 sm:-mx-6 sm:rounded-lg sm:px-6;
		background-color: rgba(49, 46, 129, 0.3);
		border: 2px solid rgba(99, 102, 241, 0.2);
		color: rgb(248 250 252);
		box-shadow:
			0 4px 6px -1px rgba(0, 0, 0, 0.3),
			inset 0 2px 4px 0 rgba(99, 102, 241, 0.05);
	}

	.prose :where(pre code):not(:where([class~="not-prose"] *)) {
		@apply border-0 bg-transparent p-0 text-inherit;
	}

	.prose :where(table):not(:where([class~="not-prose"] *)) {
		@apply mt-8 w-full text-left text-sm/6;
		border: 2px solid rgba(99, 102, 241, 0.2); /* indigo-500/20 */
		border-radius: 0.5rem;
		overflow: hidden;
	}

	.prose :where(thead):not(:where([class~="not-prose"] *)) {
		@apply border-b-2;
		border-bottom-color: rgba(99, 102, 241, 0.3) !important; /* indigo-500/30 */
		background: rgba(99, 102, 241, 0.05);
	}

	.prose :where(th):not(:where([class~="not-prose"] *)) {
		@apply px-4 py-3 font-semibold text-slate-50;
		color: rgb(248 250 252) !important;
	}

	.prose :where(tbody):not(:where([class~="not-prose"] *)) {
		@apply divide-y;
		border-color: rgba(255, 255, 255, 0.1);
	}

	.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
		transition: background-color 0.2s ease;
	}

	.prose :where(tbody tr):not(:where([class~="not-prose"] *)):hover {
		background: rgba(99, 102, 241, 0.05);
	}

	.prose :where(td):not(:where([class~="not-prose"] *)) {
		@apply px-4 py-4;
	}

	.prose :where(th:first-child, td:first-child):not(:where([class~="not-prose"] *)) {
		@apply pl-4;
	}

	.prose :where(th:last-child, td:last-child):not(:where([class~="not-prose"] *)) {
		@apply pr-4;
	}

	.prose :where(img, video):not(:where([class~="not-prose"] *)) {
		@apply mt-8 rounded-lg;
	}

	.prose :where(figure):not(:where([class~="not-prose"] *)) {
		@apply mt-8;
	}

	.prose :where(figure > img):not(:where([class~="not-prose"] *)) {
		@apply mt-0;
	}

	.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
		@apply mt-3 text-sm/6 text-slate-400;
		color: rgb(148 163 184);
	}

	.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
		@apply mt-8 border-l-4 pl-6 pr-4 py-4 text-slate-300 italic rounded-r-lg;
		color: rgb(203 213 225);
		border-left-color: rgba(99, 102, 241, 0.5);
		background: rgba(99, 102, 241, 0.05);
		box-shadow: 0 4px 6px -1px rgba(99, 102, 241, 0.1);
	}

	.prose :where(blockquote p):not(:where([class~="not-prose"] *)) {
		@apply mt-0 italic;
	}

	.prose :where(p):not(:where([class~="not-prose"] *)) {
		color: rgb(203 213 225); /* Force slate-300 for paragraphs */
	}

	.prose :where(li):not(:where([class~="not-prose"] *)) {
		color: rgb(203 213 225); /* Force slate-300 for list items */
	}

	.prose :where(br):not(:where([class~="not-prose"] *)) {
		content: "";
		display: block;
		margin: 0.5em 0;
	}

	/* Support for GitHub Flavored Markdown features */
	.prose :where(del):not(:where([class~="not-prose"] *)) {
		@apply text-slate-400 line-through;
		color: rgb(148 163 184);
		text-decoration: line-through;
	}

	.prose :where(input[type="checkbox"]):not(:where([class~="not-prose"] *)) {
		@apply mr-2;
	}
}
